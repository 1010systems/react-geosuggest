!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Geosuggest=t()}}(function(){return function t(e,s,i){function n(o,g){if(!s[o]){if(!e[o]){var a="function"==typeof require&&require;if(!g&&a)return a(o,!0);if(u)return u(o,!0);var r=new Error("Cannot find module '"+o+"'");throw r.code="MODULE_NOT_FOUND",r}var c=s[o]={exports:{}};e[o][0].call(c.exports,function(t){var s=e[o][1][t];return n(s?s:t)},c,c.exports,t,e,s,i)}return s[o].exports}for(var u="function"==typeof require&&require,o=0;o<i.length;o++)n(i[o]);return n}({1:[function(t,e){"use strict";var s=t("react"),i=t("./GeosuggestItem"),n=function(){},u=s.createClass({displayName:"Geosuggest",getDefaultProps:function(){return{fixtures:[],initialValue:"",placeholder:"Search places",className:"",onSuggestSelect:function(){},location:null,radius:0,bounds:null,country:null,types:null,googleMaps:google&&google.maps,onFocus:n,onBlur:n}},getInitialState:function(){return{isSuggestsHidden:!0,userInput:this.props.initialValue,activeSuggest:null,suggests:[],geocoder:new this.props.googleMaps.Geocoder,autocompleteService:new this.props.googleMaps.places.AutocompleteService}},onInputChange:function(){var t=this.refs.geosuggestInput.getDOMNode().value;this.setState({userInput:t},function(){this.showSuggests()}.bind(this))},update:function(t){this.setState({userInput:t})},clear:function(){this.setState({userInput:""},function(){this.hideSuggests()}.bind(this))},searchSuggests:function(){if(!this.state.userInput)return void this.updateSuggests();var t={input:this.state.userInput,location:this.props.location||new this.props.googleMaps.LatLng(0,0),radius:this.props.radius};this.props.bounds&&(t.bounds=this.props.bounds),this.props.types&&(t.types=this.props.types),this.props.country&&(t.componentRestrictions={country:this.props.country}),this.state.autocompleteService.getPlacePredictions(t,function(t){this.updateSuggests(t)}.bind(this))},updateSuggests:function(t){t||(t=[]);var e=[],s=new RegExp(this.state.userInput,"gim");this.props.fixtures.forEach(function(t){t.label.match(s)&&(t.placeId=t.label,e.push(t))}),t.forEach(function(t){e.push({label:t.description,placeId:t.place_id})}),this.setState({suggests:e})},showSuggests:function(){this.props.onFocus(),this.searchSuggests(),this.setState({isSuggestsHidden:!1})},hideSuggests:function(){this.props.onBlur(),setTimeout(function(){this.setState({isSuggestsHidden:!0})}.bind(this),100)},onInputKeyDown:function(t){switch(t.which){case 40:t.preventDefault(),this.activateSuggest("next");break;case 38:t.preventDefault(),this.activateSuggest("prev");break;case 13:this.selectSuggest(this.state.activeSuggest);break;case 9:this.selectSuggest(this.state.activeSuggest);break;case 27:this.hideSuggests()}},activateSuggest:function(t){if(this.state.isSuggestsHidden)return void this.showSuggests();var e=this.state.suggests.length-1,s="next"===t,i=null,n=0,u=0;for(u;e>=u;u++)this.state.suggests[u]===this.state.activeSuggest&&(n=s?u+1:u-1);this.state.activeSuggest||(n=s?0:e),n>=0&&e>=n&&(i=this.state.suggests[n]),this.setState({activeSuggest:i})},selectSuggest:function(t){return t||(t={label:this.state.userInput}),this.setState({isSuggestsHidden:!0,userInput:t.label}),t.location?void this.props.onSuggestSelect(t):void this.geocodeSuggest(t)},geocodeSuggest:function(t){this.state.geocoder.geocode({address:t.label},function(e,s){if(s===this.props.googleMaps.GeocoderStatus.OK){var i=e[0],n=i.geometry.location;t.gmaps=i,t.location={lat:n.lat(),lng:n.lng()},this.props.onSuggestSelect(t)}}.bind(this))},render:function(){return s.createElement("div",{className:"geosuggest "+this.props.className,onClick:this.onClick},s.createElement("input",{className:"geosuggest__input",ref:"geosuggestInput",type:"text",value:this.state.userInput,placeholder:this.props.placeholder,onKeyDown:this.onInputKeyDown,onChange:this.onInputChange,onFocus:this.showSuggests,onBlur:this.hideSuggests}),s.createElement("ul",{className:this.getSuggestsClasses()},this.getSuggestItems()))},getSuggestItems:function(){return this.state.suggests.map(function(t){var e=this.state.activeSuggest&&t.placeId===this.state.activeSuggest.placeId;return s.createElement(i,{key:t.placeId,suggest:t,isActive:e,onSuggestSelect:this.selectSuggest})}.bind(this))},getSuggestsClasses:function(){var t="geosuggest__suggests";return t+=this.state.isSuggestsHidden?" geosuggest__suggests--hidden":""}});e.exports=u},{"./GeosuggestItem":2,react:void 0}],2:[function(t,e){"use strict";var s=t("react"),i=s.createClass({displayName:"GeosuggestItem",getDefaultProps:function(){return{isActive:!1,suggest:{label:""},onSuggestSelect:function(){}}},onClick:function(t){t.preventDefault(),this.props.onSuggestSelect(this.props.suggest)},render:function(){return s.createElement("li",{className:this.getSuggestClasses(),onClick:this.onClick},this.props.suggest.label)},getSuggestClasses:function(){var t="geosuggest-item";t+=this.props.isActive?" geosuggest-item--active":"";var e=this.props.suggest.className;return t+=e?" "+e:""}});e.exports=i},{react:void 0}]},{},[1])(1)});